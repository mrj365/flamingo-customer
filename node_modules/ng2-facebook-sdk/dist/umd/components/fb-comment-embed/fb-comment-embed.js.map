{"version":3,"file":"fb-comment-embed.js","sourceRoot":"","sources":["../../../../src/components/fb-comment-embed/fb-comment-embed.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAAA,sCAAuE;IACvE,oDAAiE;IAEjE;;;;;;;;;;;OAWG;IAKH,IAAa,uBAAuB;QAAS,2CAAa;QAuBxD,iCACE,EAAc,EACd,GAAa;mBAEb,kBAAM,EAAE,EAAE,GAAG,EAAE,kBAAkB,CAAC;QACpC,CAAC;QAEH,8BAAC;IAAD,CAAC,AA9BD,CAA6C,8BAAa,GA8BzD;IAvBC;QAFC,YAAK,EAAE;QACP,8BAAa;;yDACD;IAOb;QAFC,YAAK,EAAE;QACP,8BAAa;;0DACA;IAOd;QAFC,YAAK,EAAE;QACP,8BAAa;;kEACS;IArBZ,uBAAuB;QAJnC,gBAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;YAC5B,QAAQ,EAAE,EAAE;SACb,CAAC;yCAyBM,iBAAU;YACT,eAAQ;OAzBJ,uBAAuB,CA8BnC;IA9BY,0DAAuB","sourcesContent":["import { Component, Input, ElementRef, Renderer } from '@angular/core';\nimport { FBMLAttribute, FBMLComponent } from '../fbml-component';\n\n/**\n * @name Embedded Comments\n * @shortdesc Embedded comments component\n * @fbdoc https://developers.facebook.com/docs/plugins/embedded-comments\n * @description\n * Embedded comments are a simple way to put public post comments - by a Page or a person on Facebook - into the content of your web site or web page.\n * Only public comments from Facebook Pages and profiles can be embedded.\n * @usage\n * ```html\n * <fb-comment-embed href=\"https://www.facebook.com/zuck/posts/10102735452532991?comment_id=1070233703036185\" width=\"500\"></fb-comment-embed>\n * ```\n */\n@Component({\n  selector: 'fb-comment-embed',\n  template: ''\n})\nexport class FBCommentEmbedComponent extends FBMLComponent {\n\n  /**\n   * The absolute URL of the comment.\n   */\n  @Input()\n  @FBMLAttribute\n  href: string;\n\n  /**\n   * The width of the embedded comment container. Min. `220px`. Defaults to `560px`.\n   */\n  @Input()\n  @FBMLAttribute\n  width: string;\n\n  /**\n   * Set to `true` to include parent comment (if URL is a reply). Defaults to `false`.\n   */\n  @Input()\n  @FBMLAttribute\n  includeParent: boolean;\n\n  constructor(\n    el: ElementRef,\n    rnd: Renderer\n  ) {\n    super(el, rnd, 'fb-comment-embed');\n  }\n\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}